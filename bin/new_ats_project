#!/usr/bin/env bash

usage="$(basename $0) <docker_image_name> <branch_name>"

fail()
{
  echo $1
  exit 1
}
tmux -V &>/dev/null || fail "This scrip assumes tmux is installed"

set -e

sudo echo "initialize sudo"
[ $? -eq 0 ] || fail "sudo initialization failed."

[ -n "${HOME}" ] || fail "HOME is not set."
[ $# -eq 2 ] || fail "Not enough parameters: ${usage}"
docker_image_name=${1}; shift
branch_name=${1}; shift

repos=${HOME}/repos
repo_name=ts_asf_master_${branch_name}
ts_src=${repos}/${repo_name}

cd ${repos}
[ -d "${repo_name}" ] && fail "${repos}/${repo_name} already exists"
# Assume the user has a fork using their username.
git clone git@github.com:${USER}/trafficserver.git $repo_name
cd $repo_name
git remote add upstream git@github.com:apache/trafficserver.git
git remote update
git checkout master
git pull upstream master
git push origin master
git checkout -b ${branch_name}

container_name=${branch_name}
sudo docker run \
  --name ${container_name} \
  --init \
  --cap-add=SYS_PTRACE \
  --network=host \
  -u ${USER} \
  -d \
  -t \
  -v ${HOME}:/home/${USER}:rw \
  ${docker_image_name}

tmux new-session -s ${branch_name}   -n "src" -d "cd ${ts_src}; bash -i"
tmux new-window  -t ${branch_name}:1 -n "build"  "cd ${ts_src}; bash -i"
tmux new-window  -t ${branch_name}:2 -n "test"   "cd ${ts_src}/tests; bash -i"

docker_repo_dir="/home/${USER}/repos/${repo_name}"
tmux send-keys -t build "sudo docker exec -it ${container_name} /bin/bash -c \"cd ${docker_repo_dir}; /bin/bash\"" ENTER
tmux send-keys -t test "sudo docker exec -it ${container_name} /bin/bash -c \"cd ${docker_repo_dir}/tests; /bin/bash\"" ENTER

tmux select-window -t ${branch_name}:0
tmux -2 attach-session -t ${branch_name}
